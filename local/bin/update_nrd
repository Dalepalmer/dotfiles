#!/usr/bin/env ruby
#
# This script simply attempts to update my new_relic-discourse repository so
# that it matches whatever remote version of newrelic_rpm is the latest version
# on http://rubygems.org

Dir.chdir(File.join(ENV['CODE'], 'new_relic-discourse')) do
  file = File.read('plugin.rb')
  local_version = file.match(/^# version: ([\d\.]+)$/)[1]

  gems = `gem search newrelic_rpm`
  remote_version = gems.match(/^newrelic_rpm \(([\d\.]+)\)$/)[1]

  exit 0 if local_version == remote_version

  file.sub!("# version: #{local_version}", "# version: #{remote_version}")
  file.sub!("gem 'newrelic_rpm', '#{local_version}'", "gem 'newrelic_rpm', '#{remote_version}'")

  File.open('plugin.rb', 'w') { |f| f.write(file) }

  newrelic_yml = `curl https://raw.githubusercontent.com/newrelic/rpm/#{remote_version}/newrelic.yml`

  newrelic_yml.sub!("<%= Time.now.strftime('%B %d, %Y') %>", Time.now.strftime('%B %d, %Y'))
  newrelic_yml.sub!("<%= NewRelic::VERSION::STRING %>", remote_version)
  newrelic_yml.sub!("\n# <%= generated_for_user %>", '')
  newrelic_yml.sub!("'<%= license_key %>'", "<%= ENV['NEW_RELIC_LICENSE_KEY'] %>")
  newrelic_yml.gsub!('<%= @app_name %>', "<%= ENV['NEW_RELIC_APP_NAME'] %>")

  File.open('newrelic.yml', 'w') { |f| f.write(newrelic_yml) }

  `git commit -asm "Bump version to #{remote_version}"`
  `git push origin master`
end
